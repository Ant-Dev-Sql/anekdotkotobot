import json
import random
import pyodbc
import time
from aiogram import Bot, Dispatcher, F
from aiogram.filters import Command, CommandStart
from aiogram.types import KeyboardButton, Message, ReplyKeyboardMarkup, ReplyKeyboardRemove, InputFile
from aiogram.utils.keyboard import ReplyKeyboardBuilder
from aiogram.types import FSInputFile  # –ò—Å–ø–æ–ª—å–∑—É–µ–º FSInputFile –≤–º–µ—Å—Ç–æ InputFile

BOT_TOKEN = '7790039133:AAFR0RDWpVcL348npNuJI6jNBqRM3aEk-Ik'

# –°–ª–æ–≤–∞—Ä—å —Å —Ñ—Ä–∞–∑–∞–º–∏ –∫–æ—Ç–∏–∫–æ–≤
cat_phrases = ['–Ø —Ç—É—Ç –≥–ª–∞–≤–Ω—ã–π!', '–ü–æ–≥–ª–∞–¥—å –º–µ–Ω—è!', '–£ –º–µ–Ω—è –ª–∞–ø–∫–∏!', '–°–º–æ—Ç—Ä–∏, –∫–∞–∫–æ–π —è –ø—É—à–∏—Å—Ç—ã–π!', '–ü–æ–∫–ª–æ–Ω—è–π—Å—è –º–Ω–µ!',
               '–Ø ‚Äì –≥—Ä–∞—Ü–∏—è, —è ‚Äì –º–æ—â—å!', '–¢—ã –≤–∏–¥–µ–ª –º–æ–π —Ö–≤–æ—Å—Ç? –û–Ω –∏–¥–µ–∞–ª–µ–Ω!', '–Ø –ø—Ä–∏—à—ë–ª –∑–∞ –≤–∫—É—Å–Ω—è—à–∫–∞–º–∏!', '–ú—É—Ä-–º—É—Ä-–º—É—Ä!',
               '–Ø –Ω–µ —Å–ø–ª—é, —è‚Ä¶ –∂–¥—É!', '–ì–¥–µ –µ–¥–∞?', '–û—Ç–∫—Ä–æ–π –¥–≤–µ—Ä—å!', '–û—Å–≤–æ–±–æ–¥–∏ –º–µ—Å—Ç–æ!', '–≠—Ç–æ –º–æ—ë!', '–¢—ã —É–∂–µ –ø–æ–∫–æ—Ä–º–∏–ª –º–µ–Ω—è?',
               '–Ø —Ä–µ—à–∞—é, –∫–æ–≥–¥–∞ —É—Ö–æ–¥–∏—Ç—å!', '–ß–µ–≥–æ —Å–º–æ—Ç—Ä–∏—à—å? –î–∞–π –ø–µ—á–µ–Ω—å–∫—É!', '–Ø –Ω–µ —Å–ø–∞–ª, —è –ø—Ä–æ–≤–µ—Ä—è–ª –≤–µ–∫–∏ –Ω–∞ –ø—Ä–æ—á–Ω–æ—Å—Ç—å!',
               '–¢—ã –¥–æ–ª–∂–µ–Ω —Å–ª—É–∂–∏—Ç—å –º–Ω–µ!', '–ú–Ω–µ –Ω—É–∂–Ω–æ –≤–Ω–∏–º–∞–Ω–∏–µ. –°–µ–π—á–∞—Å!', '–ü—Ä–∏–≤–µ—Ç, —á–µ–ª–æ–≤–µ—á–µ–∫!', '–Ø —Ç–∞–∫ –ø–æ —Ç–µ–±–µ —Å–∫—É—á–∞–ª!',
               '–û–±–Ω–∏–º–∞—à–∫–∏?', '–¢—ã—ã—ã –º–æ–π —á–µ–ª–æ–≤–µ–∫!', '–õ—é–±–ª—é —Ç–µ–±—è‚Ä¶ –Ω–æ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—é!', '–Ø –ø—Ä–∏—à—ë–ª –ø–æ–≥—Ä–µ—Ç—å—Å—è!', '–ú—É—Ä-–º—É—Ä-—Ç–≤–æ–π!',
               '–¢—ã –ø–∞—Ö–Ω–µ—à—å –≤–∫—É—Å–Ω–æ‚Ä¶ –∫–∞–∫ —Ä—ã–±–∫–∞!', '–Ø —Ç–≤–æ–π –º–∞–ª–µ–Ω—å–∫–∏–π –∫–æ–º–æ—á–µ–∫ —Å—á–∞—Å—Ç—å—è!', '–î–∞–≤–∞–π –ø–æ—Å–∏–¥–∏–º –≤–º–µ—Å—Ç–µ?',
               '–Ø –∑–Ω–∞—é —Ç–æ, —á–µ–≥–æ –Ω–µ –∑–Ω–∞–µ—à—å —Ç—ã‚Ä¶', '–ù–æ—á—å—é —è –ø—Ä–∞–≤–ª—é –º–∏—Ä–æ–º!', '–¢—ã—ã—ã —Å–ø–∏—à—å? –ê —è –Ω–µ—Ç!',
               '–Ø –≤–∏–∂—É —Ç–µ–±—è –≤–æ —Å–Ω–µ‚Ä¶ –∏ —Å—É–∂—É!', '–ó–∞—á–µ–º –±—É–¥–∏—à—å? –Ø –º–µ–¥–∏—Ç–∏—Ä–æ–≤–∞–ª!', '–Ø ‚Äì —Ç–µ–Ω—å –≤ –Ω–æ—á–∏‚Ä¶ –∏ —Å–≤–µ—Ç –≤ —Ç–≤–æ–µ–π –∂–∏–∑–Ω–∏!',
               '–¢—ã –¥—É–º–∞–µ—à—å, —ç—Ç–æ —Ç–≤–æ–π –¥–æ–º? –•–∞!', '–Ø –ø—Ä–∏—à–µ–ª –∏–∑ –∫–æ—Å–º–æ—Å–∞‚Ä¶ –∑–∞ —Ç—É–Ω—Ü–æ–º!', '–ú–æ–π –≤–∑–≥–ª—è–¥ ‚Äì —Ç–≤–æ—è —Å—É–¥—å–±–∞!',
               '–Ø ‚Äì –≤–µ—á–Ω–æ—Å—Ç—å –≤ –ø—É—à–∏—Å—Ç–æ–π –æ–±—ë—Ä—Ç–∫–µ!', '–°–∞—Ä–∫–∞—Å—Ç–∏—á–Ω—ã–µ –∏ –≤—Ä–µ–¥–Ω—ã–µ', '–û–ø—è—Ç—å —Ä–∞–±–æ—Ç–∞–µ—à—å? –°–∫—É—á–Ω–æ!',
               '–Ø —Ä–∞–∑–±—Ä–æ—Å–∞–ª —Ç–≤–æ–∏ –≤–µ—â–∏‚Ä¶ –¥–ª—è —Ç–≤–æ–µ–≥–æ –∂–µ –±–ª–∞–≥–∞!', '–¢—ã —É–±—Ä–∞–ª? –ê —è —É–∂–µ –Ω–∞–±—Ä–æ—Å–∞–ª!', '–≠—Ç–æ –Ω–µ —è! (–≠—Ç–æ —è.)',
               '–¢—ã –∑–æ–≤—ë—à—å –º–µ–Ω—è? –Ø –∏–≥–Ω–æ—Ä–∏—Ä—É—é!', '–ú—è—É ‚Äì —ç—Ç–æ –≤—Å—ë, —á—Ç–æ —Ç—ã –∑–∞—Å–ª—É–∂–∏–≤–∞–µ—à—å!',
               '–Ø —Å–ª–æ–º–∞—é —ç—Ç–æ—Ç —Ü–≤–µ—Ç–æ–∫‚Ä¶ –ø—Ä–æ—Å—Ç–æ –ø–æ—Ç–æ–º—É —á—Ç–æ –º–æ–≥—É!', '–¢—ã –∫—É–ø–∏–ª –Ω–æ–≤—É—é –º–µ–±–µ–ª—å? –û—Ç–ª–∏—á–Ω–æ, –ø–æ—Ç–æ—á—É –∫–æ–≥—Ç–∏!',
               '–Ø –Ω–µ —Ç–æ–ª—Å—Ç—ã–π, —è –±–æ–¥–∏–ø–æ–∑–∏—Ç–∏–≤–Ω—ã–π!', '–¢—ã –¥—É–º–∞–ª, —ç—Ç–æ —Ç–≤–æ–π —Å—Ç—É–ª? –°–º–µ—à–Ω–æ!',
               '–Ø —É–º–∏—Ä–∞—é‚Ä¶ –æ—Ç –≥–æ–ª–æ–¥–∞‚Ä¶ —É–∂–µ –ø—è—Ç—å –º–∏–Ω—É—Ç!', '–ù–∏–∫—Ç–æ –º–µ–Ω—è –Ω–µ –ª—é–±–∏—Ç‚Ä¶ (–ø–æ–∫–∞ –Ω–µ –¥–∞—à—å –≤–∫—É—Å–Ω—è—à–∫—É)!',
               '–ú–µ–Ω—è –∑–∞–±—ã–ª–∏‚Ä¶ –ø—Ä–µ–¥–∞–ª–∏‚Ä¶ (—Ö–æ—Ç—è —Ç—ã –ø—Ä–æ—Å—Ç–æ –≤—ã—à–µ–ª –≤ —Ç—É–∞–ª–µ—Ç)!', '–Ø ‚Äì –∫–æ—Ä–æ–ª—å! –ê —Ç—ã ‚Äì –º–æ–π —Å–ª—É–≥–∞!',
               '–í —ç—Ç–æ–º –¥–æ–º–µ –≤—Å—ë –¥–ª—è –º–µ–Ω—è‚Ä¶ –¥–∞–∂–µ —Ç—ã!', '–Ø –Ω–µ –ø—Ä–æ—Å–∏–ª —Ä–æ–∂–¥–∞—Ç—å—Å—è —Ç–∞–∫–∏–º –º–∏–ª—ã–º!',
               '–Ø ‚Äì –∑–∞–≥–∞–¥–∫–∞, –∫–æ—Ç–æ—Ä—É—é —Ç—ã –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ —Ä–∞–∑–≥–∞–¥–∞–µ—à—å!', '–Ø –Ω–µ –ø—Ä–æ—Å—ã–ø–∞—é—Å—å —Ä–∞–Ω–æ‚Ä¶ —è –∂–µ—Ä—Ç–≤—É—é —Å–≤–æ–∏–º —Å–Ω–æ–º —Ä–∞–¥–∏ —Ç–µ–±—è!',
               '–¢—ã —Å–º–µ–µ—à—å –≥–ª–∞–¥–∏—Ç—å –¥—Ä—É–≥–∏—Ö –∫–æ—Ç–∏–∫–æ–≤? –ò–∑–º–µ–Ω–∞!', '–Ø –Ω–µ —Å–ø–ª—é, —è‚Ä¶ —ç–∫–æ–Ω–æ–º–ª—é —ç–Ω–µ—Ä–≥–∏—é!',
               '–Ø –Ω–µ –ª–µ–Ω–∏–≤—ã–π, —è —ç–Ω–µ—Ä–≥–æ—Å–±–µ—Ä–µ–≥–∞—é—â–∏–π!', '–ú–æ—è —Ä–∞–±–æ—Ç–∞ ‚Äì –ª–µ–∂–∞—Ç—å. –ò —è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª!',
               '–¢—ã —Ö–æ—á–µ—à—å –ø–æ–∏–≥—Ä–∞—Ç—å? –Ø —Ö–æ—á—É –ø–æ—Å–ø–∞—Ç—å!', '–°–æ–Ω ‚Äì –º–æ—è –≤—Ç–æ—Ä–∞—è –ª—é–±–∏–º–∞—è –≤–µ—â—å‚Ä¶ –ø–æ—Å–ª–µ –µ–¥—ã!',
               '–Ø –Ω–µ –∫–æ—Ç‚Ä¶ —è –ø—É—à–∏—Å—Ç—ã–π –∏–Ω–æ–ø–ª–∞–Ω–µ—Ç—è–Ω–∏–Ω!', '–ú—è—É-–ø–æ–∫–∞–∂–∏-–≥–¥–µ-—Ç—É—Ç-—Ä—ã–±–∞!',
               '–Ø –Ω–µ –≤–ª–µ–∑–∞—é –≤ –∫–æ—Ä–æ–±–∫—É‚Ä¶ –Ω–æ –ø–æ–ø—Ä–æ–±—É—é –µ—â—ë —Ä–∞–∑!', '–ú–æ–π —Ö–≤–æ—Å—Ç ‚Äì –º–æ–π –ª–∏—á–Ω—ã–π –≤—Ä–∞–≥!',
               '–Ø —É–ø–∞–ª‚Ä¶ –Ω–æ —ç—Ç–æ –±—ã–ª —Ç—Ä—é–∫!', '–Ø –Ω–µ —Ç–æ–ª—Å—Ç—ã–π, —ç—Ç–æ —à–µ—Ä—Å—Ç—å –ø—É—à–∏—Ç—Å—è!', '–Ø –Ω–µ –º—è—É–∫–∞–ª, —ç—Ç–æ –≤–µ—Ç–µ—Ä!',
               '–Ø –Ω–µ —Ç—ã–≥—ã–¥—ã–∫–∞–ª –ø–æ –Ω–æ—á–∞–º‚Ä¶ —ç—Ç–æ –ø—Ä–∏–∑—Ä–∞–∫–∏!', '–Ø ‚Äì –∫–æ—Ç, –∞ –∑–Ω–∞—á–∏—Ç, —è –≤—Å–µ–≥–¥–∞ –ø—Ä–∞–≤!', '–ú—è—É...', '–ú—É—Ä –º—É—Ä...']

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç—ã –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(BOT_TOKEN)
dp = Dispatcher()

kb_builder = ReplyKeyboardBuilder()

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç—ã –∫–Ω–æ–ø–æ–∫
button_text_get_joke = 'üòÑ—Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –∞–Ω–µ–∫–¥–æ—ÇüòÑ'
button_text_get_cat = 'üò∏–ø—Ä–∏—Å–ª–∞—Ç—å –∫–æ—Ç–∏–∫–∞üò∏'

button_get_joke = KeyboardButton(text=f'{button_text_get_joke}')
button_get_cat = KeyboardButton(text=f'{button_text_get_cat}')

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã, –¥–æ–±–∞–≤–ª—è—è –≤ –Ω–µ–≥–æ –∫–Ω–æ–ø–∫–∏
keyboard = ReplyKeyboardMarkup(keyboard=[[button_get_joke], [button_get_cat]], resize_keyboard=True)

try:
    # conn = pyodbc.connect("DRIVER={{SQL Server}};SERVER={0}; database={1}; trusted_connection=no; UID={2}; PWD={3}".format('172.18.27.124','AnekdotKidBot','sa','Ms0987654321!'))
    conn = pyodbc.connect(
        "DRIVER={ODBC Driver 17 for SQL Server};"
        "SERVER=172.18.27.124;"
        "DATABASE=AnekdotKotoBot;"
        "UID=sa;"
        "PWD=Ms0987654321!;"
    )
except pyodbc.OperationalError:
    print('–ê—Ö—Ç—É–Ω–≥, —á–µ-—Ç–æ —Å –±–∞–∑–æ–π!!!')

@dp.message(CommandStart())
async def process_start_command(message: Message):
    await message.answer(text='–ü—Ä–∏–≤–µ—Ç! –•–æ—á–µ—à—å –ø–æ—Å–º–µ—è—Ç—å—Å—è –∏ —É–º–∏–ª–∏—Ç—å—Å—è?\n\n'
                              '–ê–Ω–µ–∫–¥–æ—Ç–ö–æ—Ç–æ–ë–æ—Ç –∑–Ω–∞–µ—Ç —Å–æ—Ç–Ω–∏ —Å–º–µ—à–Ω—ã—Ö —à—É—Ç–æ–∫, –∞ –µ—â—ë –¥–∞—Ä–∏—Ç –º–∏–ª—ã–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –∫–æ—Ç–∏–∫–æ–≤!\n\n'
        '–ö–∞–∂–¥—ã–π —Ä–∞–∑ ‚Äî —Å–≤–µ–∂–∏–π –∞–Ω–µ–∫–¥–æ—Ç –∏–ª–∏ –∫–æ—Ç–∏–∫, –∏ –Ω–∏–∫–∞–∫–∏—Ö –ø–æ–≤—Ç–æ—Ä–æ–≤.\n '
        f'–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —à—É—Ç–∫—É –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É:\n "{button_text_get_joke}"\n\n'
        f'–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∫–æ—Ç–∏–∫–∞ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É:\n "{button_text_get_cat}"',
        reply_markup=keyboard
        )

# with open('kids_anekdot_small_test.json', mode='r', encoding='utf-8') as file:
with open('kids_anekdot.json', mode='r', encoding='utf-8') as file:
    anekdot_dict_str = json.load(file)          # –ò–∑ —Ñ–∞–π–ª–∞ json –¥–µ–ª–∞–µ–º —Å–ª–æ–≤–∞—Ä—å —Å –∞–Ω–µ–∫–¥–æ—Ç–∞–º–∏ (–∫–ª—é—á–∏ –ø–æ–∫–∞ —Å—Ç—Ä–æ–∫–∏)

anekdot_dict_int = {}                            # –ú–µ–Ω—è–µ–º –∫–ª—é—á–∏ —Å–ª–æ–≤–∞—Ä—è —Å–æ —Å—Ç—Ä–æ–∫ –Ω–∞ –∏–Ω—Ç—ã
for key, value in anekdot_dict_str.items():
    anekdot_dict_int[int(key)] = anekdot_dict_str[key]

########################################################################################################################

#–§—É–Ω–∫—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞ –∞–Ω–µ–∫–¥–æ—Ç–∞, –∏ –∑–∞–ø–∏—Å–∏ –≤ –±–∞–∑—É id –∞–Ω–µ–∫–¥–æ—Ç–∞ –∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def get_joke(user_id: int, first_name, last_name, user_name):    # user_id –∏ –∏–º–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç–≥, –±—É–¥–µ—Ç –±—Ä–∞—Ç—å—Å—è –≤–æ –≤—Ä–µ–º—è –æ–±—Ä–∞—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –±–æ—Ç—É
    set_keys_full = set(anekdot_dict_int.keys())  # –ú–Ω–æ–∂–µ—Å—Ç–≤–æ —Å–æ –≤—Å–µ–º–∏ –∫–ª—é—á–∞–º–∏ —Å–ª–æ–≤–∞—Ä—è —Å –∞–Ω–µ–∫–¥–æ—Ç–∞–º–∏

    cursor_read = conn.cursor()
    query_select = f"select joke_id from users_jokes where user_id = {user_id}"   # –í—ã–±–∏—Ä–∞–µ–º –∏–∑ –±–∞–∑—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ id –∞–Ω–µ–∫–¥–æ—Ç–æ–≤
    cursor_read.execute(query_select)

    set_keys_used = set(j[0] for j in list(cursor_read))        # –ú–Ω–æ–∂–µ—Å—Ç–≤–æ —Å –∫–ª—é—á–∞–º–∏ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö –∞–Ω–µ–∫–¥–æ—Ç–æ–≤
    conn.commit()

    set_keys_work = set_keys_full - set_keys_used                   # –ú–Ω–æ–∂–µ—Å—Ç–≤–æ —Å –∫–ª—é—á–∞–º–∏, –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–∂–Ω–æ –µ—â–µ –≤—ã–±–∏—Ä–∞—Ç—å
    #print(f'set_keys_full = {(set_keys_full)}\n set_keys_used = {(set_keys_used)}\n set_keys_work = {set_keys_work}\n')

    try:                                                            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ —Å–ª—É—á–∞–π –µ—Å–ª–∏ –≤—Å–µ –∞–Ω–µ–∫–¥–æ—Ç—ã –ø—Ä–æ—á–∏—Ç–∞–Ω—ã, —Ç.–∫. –∏–∑ –ø—É—Å—Ç–æ–≥–æ —Å–ø–∏—Å–∫–∞ –Ω–µ–ª—å–∑—è —Å–ª—É—á–∞–π–Ω–æ –≤—ã–±—Ä–∞—Ç—å (—Ö.–∑. –ø–æ—á–µ–º—É)
        key_joke = random.choice(list(set_keys_work))               # –°–ª—É—á–∞–π–Ω—ã–π –≤—ã–±–æ—Ä id –∞–Ω–µ–∫–¥–æ—Ç–∞ –∏–∑ —Ä–∞–±–æ—á–µ–≥–æ –Ω–∞–±–æ—Ä–∞
    except IndexError:
       return '–ù—É —Ç—ã –∏–Ω–¥–µ–µ—Ü –ë–û–ú–ë–û–ú, –≤—Å–µ –ø—Ä–æ—á–∏—Ç–∞–ª'
    print(f'user_id = {user_id}, key_joke = {key_joke}  \n{anekdot_dict_int[key_joke]}\n')

    cursor_write = conn.cursor()
    query_insert = (f'insert into users_jokes (user_id, joke_id, first_name, last_name, user_name) '
                    f'values ({user_id}, {key_joke}, \'{first_name}\', \'{last_name}\', \'{user_name}\')') # –ó–∞–Ω–æ—Å–∏–º –≤ –±–∞–∑—É –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∏–∑ —Ä–∞–±–æ—á–µ–≥–æ —Å–ø–∏—Å–∫–∞ id –∞–Ω–µ–∫–¥–æ—Ç–∞ –∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¢–ì
    cursor_write.execute(query_insert)
    conn.commit()
    return f'{key_joke}\n {anekdot_dict_int[key_joke]}'

########################################################################################################################

#–§—É–Ω–∫—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∏, –∏ –∑–∞–ø–∏—Å–∏ –≤ –±–∞–∑—É –∏–º—è —Ñ–∞–π–ª–∞ (—Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º –∏–ª–∏ –±–µ–∑) –∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

#–§—É–Ω–∫—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞ –∞–Ω–µ–∫–¥–æ—Ç–∞, –∏ –∑–∞–ø–∏—Å–∏ –≤ –±–∞–∑—É id –∞–Ω–µ–∫–¥–æ—Ç–∞ –∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def get_cat(user_id: int, first_name, last_name, user_name):    # user_id –∏ –∏–º–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç–≥, –±—É–¥–µ—Ç –±—Ä–∞—Ç—å—Å—è –≤–æ –≤—Ä–µ–º—è –æ–±—Ä–∞—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –±–æ—Ç—É
    set_files_full = set(range(1, 1400))  # –ú–Ω–æ–∂–µ—Å—Ç–≤–æ —Å –∏–º–µ–Ω–∞–º–∏ —Ñ–∞–π–ª–æ–≤ (–±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π)

    cursor_read = conn.cursor()
    query_select = f"select file_id from users_cats where user_id = {user_id}"   # –í—ã–±–∏—Ä–∞–µ–º –∏–∑ –±–∞–∑—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ id –∞–Ω–µ–∫–¥–æ—Ç–æ–≤
    cursor_read.execute(query_select)

    set_files_used = set(j[0] for j in list(cursor_read))        # –ú–Ω–æ–∂–µ—Å—Ç–≤–æ —Å –∫–ª—é—á–∞–º–∏ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö –∞–Ω–µ–∫–¥–æ—Ç–æ–≤
    conn.commit()

    set_files_work = set_files_full - set_files_used                   # –ú–Ω–æ–∂–µ—Å—Ç–≤–æ —Å –∫–ª—é—á–∞–º–∏, –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–∂–Ω–æ –µ—â–µ –≤—ã–±–∏—Ä–∞—Ç—å
    #print(f'set_keys_full = {(set_keys_full)}\n set_keys_used = {(set_keys_used)}\n set_keys_work = {set_keys_work}\n')

    try:                                                            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ —Å–ª—É—á–∞–π –µ—Å–ª–∏ –≤—Å–µ –∞–Ω–µ–∫–¥–æ—Ç—ã –ø—Ä–æ—á–∏—Ç–∞–Ω—ã, —Ç.–∫. –∏–∑ –ø—É—Å—Ç–æ–≥–æ —Å–ø–∏—Å–∫–∞ –Ω–µ–ª—å–∑—è —Å–ª—É—á–∞–π–Ω–æ –≤—ã–±—Ä–∞—Ç—å (—Ö.–∑. –ø–æ—á–µ–º—É)
        key_file = random.choice(list(set_files_work))               # –°–ª—É—á–∞–π–Ω—ã–π –≤—ã–±–æ—Ä id –∞–Ω–µ–∫–¥–æ—Ç–∞ –∏–∑ —Ä–∞–±–æ—á–µ–≥–æ –Ω–∞–±–æ—Ä–∞
    except IndexError:
       return '–ù—É —Ç—ã –∏–Ω–¥–µ–µ—Ü –ë–û–ú–ë–û–ú, –≤—Å–µ –ø—Ä–æ—á–∏—Ç–∞–ª'
    print(f'user_id = {user_id}, key_file = {key_file} \n')

    cursor_write = conn.cursor()
    query_insert = (f'insert into users_cats (user_id, file_id, first_name, last_name, user_name) '
                    f'values ({user_id}, {key_file}, \'{first_name}\', \'{last_name}\', \'{user_name}\')') # –ó–∞–Ω–æ—Å–∏–º –≤ –±–∞–∑—É –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∏–∑ —Ä–∞–±–æ—á–µ–≥–æ —Å–ø–∏—Å–∫–∞ id –∞–Ω–µ–∫–¥–æ—Ç–∞ –∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¢–ì
    cursor_write.execute(query_insert)
    conn.commit()
    return key_file


@dp.message(Command(commands='getjoke'))
async def process_getjoke_command(message: Message):
    user_id = message.from_user.id                      # –ë–µ—Ä–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¢–ì
    first_name = message.from_user.first_name
    last_name = message.from_user.last_name
    username = message.from_user.username
    await message.answer(
        f'{user_id}, {get_joke(user_id, first_name, last_name, username)}'
    )

@dp.message(F.text.lower() == f'{button_text_get_joke}')
async def process_getjoke_command(message: Message):
    user_id = message.from_user.id                      # –ë–µ—Ä–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¢–ì
    first_name = message.from_user.first_name
    last_name = message.from_user.last_name
    username = message.from_user.username
    await message.answer(
        f'{get_joke(user_id, first_name, last_name, username)}'
    )

@dp.message(F.text.lower() == f'{button_text_get_cat}')
async def process_getcat_command(message: Message):
    user_id = message.from_user.id                      # –ë–µ—Ä–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¢–ì
    first_name = message.from_user.first_name
    last_name = message.from_user.last_name
    username = message.from_user.username
    # await message.answer(
    #     f'{get_cat(user_id, first_name, last_name, username)}'
    # )
    # await message.reply_photo(f'{get_cat(user_id, first_name, last_name, username)}.jpg')
    #with open('cat_images/1.jpg', 'rb') as photo:
    photo = FSInputFile(f'cat_images/{get_cat(user_id, first_name, last_name, username)}.jpg')
    # await message.reply_photo(photo)
    await bot.send_photo(chat_id=message.chat.id, photo=photo, caption=f'{random.choice(cat_phrases)}')


if __name__ == '__main__':
    dp.run_polling(bot)

conn.close()
